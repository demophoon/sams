<!DOCTYPE html>
<html lang="${request.locale_name}">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="pyramid web application">
        <meta name="author" content="Britt Gresham">
        <link rel="shortcut icon" href="${request.static_url('sams:static/pyramid-16x16.png')}">

        <title>SAMS - Server Information</title>

        <link href="//oss.maxcdn.com/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet">
        <!-- Custom styles for this scaffold -->
        <link href="${request.static_url('sams:static/homepage.css')}" rel="stylesheet">
        <link href="${request.static_url('sams:static/sams.css')}" rel="stylesheet">

        <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!--[if lt IE 9]>
        <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
        <![endif]-->

        <style type="text/css" media="screen">
            body {
                padding-top: 75px;
            }
        </style>

    </head>

    <body>

        <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
            <div class="container">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">SAMS</a>
                </div>
                <div class="navbar-collapse collapse">
                </div><!--/.navbar-collapse -->
            </div>
        </div>

        <div class='container'>
            <table class="table">
                <thead>
                    <tr>
                        <th colspan=2>Workers</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="col-sm-3">Pingdom Worker</td>
                        <td data-bind="text: ~~(next_pingdom_count() / 1000) + ' seconds'"></td>
                    </tr>
                    <tr>
                        <td class="col-sm-3">Reporting Worker</td>
                        <td>
                            <div class="progress">
                                <div data-bind="attr: {'aria-valuenow': display_percentage}, text: status_string, style: {width: display_percentage() + '%'}" class="progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                        </td>
                    </tr>

                </tbody>
            </table>
            <hr>

            <script src="//cdnjs.cloudflare.com/ajax/libs/knockout/3.1.0/knockout-min.js"></script>
            <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
            <script src="//oss.maxcdn.com/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js"></script>

            <script type="text/javascript" charset="utf-8">
                var now = function() {
                    var n = new Date();
                    return new Date(n.getTime() + n.getTimezoneOffset() * 60000) * 1;
                    return new Date() * 1;
                }

                var duration = function(seconds) {
                    if (seconds < 60) {
                        return ~~seconds + "s";
                    } else if (seconds >= 60 && seconds < 3600) {
                        return ~~(seconds / 60) + "m " + duration(seconds % 60);
                    }
                }

                var viewModel = function() {
                    var me = this;
                    me.percent = ko.observable(0);
                    me.known_percent = ko.observable(0);
                    me.pps = ko.observable(0);
                    me.last_state = ko.observable(null);
                    me.status_string = ko.computed(function() {
                        if (me.last_state()) {
                            return me.last_state().reporting_worker.state + " - " + me.display_percentage() + "%"
                        }
                        return "";
                    });
                    me.last_pingdom_update = ko.observable();
                    me.pingdom_sleep_time = ko.observable(0);
                    me.next_pingdom_count = ko.observable(0);
                    me.last_update = now();

                    me.display_percentage = ko.computed(function() {
                        return ~~(me.percent() * 1000) / 10
                    });

                    me.update_function = function() {
                        $.ajax({
                            url: "/api/1.0/workers",
                            cache: false,
                            success: function(data) {
                                if (data.reporting_worker.percent > me.percent() || data.reporting_worker.state != me.last_state().reporting_worker.state) {
                                    me.percent(data.reporting_worker.percent);
                                }
                                me.known_percent(data.reporting_worker.percent);
                                me.pps(data.reporting_worker.percent_rate);
                                me.last_pingdom_update(data.pingdom_worker.last_update);
                                me.pingdom_sleep_time(data.pingdom_worker.sleep_time);
                                me.last_state(data);
                            }
                        });
                    }

                    me.update_function(me);

                    me.timer = setInterval(function() { me.update_function(me) }, 15000);

                    me.last_update = now();
                    me.update_percent = function() {
                        percent_of_update = (now() - me.last_update) / 1000;
                        var prate = me.pps() * percent_of_update;
                        if (me.known_percent)
                        if (me.percent() + prate > 1) {
                            me.percent(1);
                        } else {
                            if (me.known_percent() > me.percent()) {
                                me.percent(me.percent() + prate);
                            }
                            me.known_percent(me.known_percent() + prate);
                        }
                        var count = (new Date((me.last_pingdom_update() + me.pingdom_sleep_time()) * 1000) - (new Date() * 1));
                        count %= (me.pingdom_sleep_time() * 1000);
                        while (count < 0) {
                            count += (me.pingdom_sleep_time() + 1) * 1000;
                        }
                        me.next_pingdom_count(count);
                        me.last_update = now();
                    }
                    me.update_timer = setInterval(me.update_percent, 100);
                }
                var ViewModel = new viewModel();
                ko.applyBindings(ViewModel);
            </script>

            <footer>
            <p>&copy; Britt Gresham 2014</p>
            </footer>
        </div>

    </body>
</html>
